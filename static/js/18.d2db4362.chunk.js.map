{"version":3,"sources":["routes.js","containers/DefaultLayout/DefaultLayout.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","actions/authActions.js"],"names":["routes","path","exact","name","component","React","lazy","Promise","all","__webpack_require__","e","then","bind","DefaultHeader","DefaultLayout","loading","react_default","a","createElement","className","this","props","checkUser","console","log","isAuthenticated","authState","user","react","fallback","react_router","map","route","idx","key","render","from","to","Component","connect","state","auth","item","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","d","__webpack_exports__","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_ref","C_modshow_react_webapp2_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_modshow_react_webapp2_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_callee","dispatch","_context","Auth","currentAuthenticatedUser","CHECK_USER","payload","_x","signIn","data","_ref2","_callee2","_context2","username","password","SIGNIN_SUCCESS","message","SIGNIN_FAIL","_x2","signOut","_ref3","_callee3","_context3","SIGNOUT","_x3"],"mappings":"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","file":"static/js/18.d2db4362.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Browse = React.lazy( () => import('./views/Browse/Browse'));\r\nconst Show = React.lazy(() => import('./views/Show/Show'));\r\nconst Play = React.lazy(() => import('./views/Show/Show'));\r\n\r\n\r\nconst routes = [\r\n    { path: '/browse', exact: true, name: 'Browse', component: Browse },\r\n    { path: '/browse/show/:showid', name: 'Show', component: Show },\r\n    { path: '/browse/play/:episodeid', name: 'Play', component: Play },\r\n];\r\n\r\nexport default routes;","import React, { Component, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { checkUser } from '../../actions/authActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n// sidebar nav config\r\n//import NavBar from '../components/NavBar';\r\n// routes config\r\nimport routes from '../../routes';\r\n\r\n//const DefaultFooter = React.lazy(() => import('./DefaultFooter'));\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\nclass DefaultLayout extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.checkUser();\r\n    }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  /*signOut(e) {\r\n    e.preventDefault()\r\n    this.props.history.push('/signin')\r\n  }*/\r\n\r\n\r\n  render() {\r\n    console.log('isAuthenticated:', this.props.isAuthenticated)\r\n    \r\n    return (\r\n        \r\n        (this.props.isAuthenticated) ? \r\n        (\r\n      <div className=\"app\">\r\n        <DefaultHeader authState={this.props.authState} user={this.props.user}>\r\n        </DefaultHeader>\r\n        \r\n        <div className=\"app-body\">\r\n          <main className=\"main\">\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {routes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => (\r\n                          <route.component {...props} />\r\n                        )} />\r\n                    ) : (null);\r\n                  })}\r\n                  <Redirect from=\"/\" to=\"/browse\" />\r\n                </Switch>\r\n              </Suspense>\r\n          </main>\r\n        </div>\r\n      </div>\r\n        ) : (\r\n        <Redirect to=\"/signin\" />\r\n        )\r\n    );\r\n  }\r\n}\r\n\r\nDefaultLayout.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool.isRequired,  \r\n    // loading: PropTypes.bool.isRequired\r\n    checkUser: PropTypes.func.isRequired\r\n}\r\n  \r\nconst mapStateToProps = state => ({\r\n    auth: state.auth.item,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { checkUser })(DefaultLayout);\r\n","module.exports = require(\"regenerator-runtime\");\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\r\n  try {\r\n    var info = gen[key](arg);\r\n    var value = info.value;\r\n  } catch (error) {\r\n    reject(error);\r\n    return;\r\n  }\r\n\r\n  if (info.done) {\r\n    resolve(value);\r\n  } else {\r\n    Promise.resolve(value).then(_next, _throw);\r\n  }\r\n}\r\n\r\nexport default function _asyncToGenerator(fn) {\r\n  return function () {\r\n    var self = this,\r\n        args = arguments;\r\n    return new Promise(function (resolve, reject) {\r\n      var gen = fn.apply(self, args);\r\n\r\n      function _next(value) {\r\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\r\n      }\r\n\r\n      function _throw(err) {\r\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\r\n      }\r\n\r\n      _next(undefined);\r\n    });\r\n  };\r\n}","/**\r\n * Copyright (c) 2014-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","import { CHECK_USER, SIGNIN_SUCCESS, SIGNIN_FAIL, SIGNOUT } from './types';\r\nimport { Auth } from 'aws-amplify';\r\n\r\n// import { getShow, getSeason } from '../graphql/queries';\r\n// import { updateRatingShow } from '../graphql/mutations';\r\n// import awsmobile from '../aws-exports.js';\r\n\r\n// API.configure(awsmobile);\r\n\r\n// Check if user is logged in or not\r\nexport const checkUser = () => async dispatch => {\r\n\r\n    Auth.currentAuthenticatedUser()\r\n        .then(\r\n            user => {\r\n                dispatch({\r\n                    type: CHECK_USER,\r\n                    payload: user,\r\n                })\r\n                // console.log('Check User Ok', user)\r\n            }\r\n        )\r\n        .catch(\r\n            err => {\r\n                dispatch({\r\n                    type: CHECK_USER,\r\n                    payload: null,\r\n                })\r\n            }\r\n        );\r\n}\r\n\r\n// Auth Signin Cognito\r\nexport const signIn = data => async dispatch => {\r\n    Auth.signIn(data.username, data.password)\r\n        .then(\r\n            user => {\r\n                dispatch({\r\n                    type: SIGNIN_SUCCESS,\r\n                    payload: user,\r\n                    message: \"Ok\"\r\n                })\r\n            }\r\n        )\r\n        .catch(\r\n            err => {\r\n                dispatch({\r\n                    type: SIGNIN_FAIL,\r\n                    payload: err,\r\n                    message: err.message\r\n                })\r\n\r\n                // console.log('Sign In Fail', err)\r\n            }\r\n        );\r\n}\r\n\r\n// Auth Signout Cognito - User Pools and Federated\r\nexport const signOut = () => async dispatch => {\r\n    Auth.signOut()\r\n        .then(\r\n            () => {\r\n                dispatch({\r\n                    type: SIGNOUT,\r\n                    payload: ''\r\n                })\r\n            }\r\n        )\r\n        .catch(\r\n            err => {\r\n                console.log('Signout Fail', err);\r\n            }\r\n        );\r\n}\r\n\r\n// FB Signin Federated \r\n\r\n\r\n// Google Login Federated"],"sourceRoot":""}