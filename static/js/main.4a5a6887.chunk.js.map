{"version":3,"sources":["actions/types.js","reducers/showReducer.js","reducers/authReducer.js","reducers/ratingReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js","aws-exports.js"],"names":["__webpack_require__","d","__webpack_exports__","FETCH_SHOWS","GET_SHOW","NEW_RATING","UPDATE_RATINGSHOW","SIGNIN_SUCCESS","SIGNIN_FAIL","SIGNOUT","CHECK_USER","initialState","isLoaded","isLoading","items","data","listShows","item","getShow","update_show","isAuthenticated","loading","rating_item","getRating","combineReducers","shows","state","arguments","length","undefined","action","type","Object","objectSpread","payload","auth","user","console","log","ratings","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Amplify","configure","awsmobile","DefaultLayout","React","lazy","e","then","bind","Home","Promise","all","Producers","Terms","Privacy","Test","ResetPassword","Authenticator","Page404","App","checkUser","Auth","currentAuthenticatedUser","catch","err","Hub","listen","event","react_default","a","createElement","es","react_router_dom","className","Suspense","fallback","react_router","path","render","props","component","exact","name","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","aws_project_region","aws_dynamodb_all_tables_region","aws_dynamodb_table_schemas","tableName","region","aws_user_files_s3_bucket","aws_user_files_s3_bucket_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","federationTarget","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url"],"mappings":"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","file":"static/js/main.4a5a6887.chunk.js","sourcesContent":["// Shows\r\nexport const FETCH_SHOWS = 'FETCH_SHOWS';\r\nexport const GET_SHOW = 'GET_SHOW';\r\n\r\n// Season\r\nexport const GET_SEASON = 'GET_SEASON';\r\n\r\n// Rating\r\nexport const NEW_RATING = 'NEW_RATING';\r\nexport const UPDATE_RATINGSHOW = 'UPDATE_RATINGSHOW';\r\n\r\n// Auth\r\nexport const FB_SIGNIN = 'FB_SIGNIN';\r\nexport const GOOGLE_SIGNIN = 'GOOGLE_SIGNIN';\r\n\r\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\r\nexport const SIGNIN_FAIL = 'SIGNIN_FAIL';\r\n\r\nexport const SIGNOUT = 'SIGNOUT';\r\n\r\nexport const CHECK_USER = 'CHECK_USER';\r\n\r\n","import { FETCH_SHOWS, GET_SHOW, UPDATE_RATINGSHOW  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isLoaded: false,\r\n    isLoading: false,\r\n    items: {\r\n        data: {\r\n            listShows: {\r\n                items: []\r\n            },\r\n        }\r\n    },\r\n    item: {\r\n      data:{\r\n          getShow: {\r\n\r\n          }\r\n       }\r\n    },\r\n    update_show:{\r\n        data:{\r\n            getShow:{\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default function( state = initialState, action ) {\r\n    switch(action.type) {\r\n        case FETCH_SHOWS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoading: true\r\n            };\r\n        case GET_SHOW:\r\n            return{\r\n              ...state,\r\n              item: action.payload,\r\n              isLoading: true\r\n            };\r\n          case UPDATE_RATINGSHOW:\r\n            return{\r\n              ...state,\r\n              update_show: action.payload,\r\n              isLoading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SIGNIN_FAIL, SIGNIN_SUCCESS, SIGNOUT, CHECK_USER  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    item: {},\r\n    isAuthenticated: true,\r\n    loading: true\r\n}\r\n\r\n// Boolean - Check for current user credentials\r\nfunction checkUser(user) {\r\n    if(user) {\r\n        return true;\r\n    } \r\n    \r\n    return false;\r\n}\r\n\r\nexport default function( state = initialState, action ) {\r\n    switch(action.type) {\r\n        case SIGNIN_FAIL:\r\n                console.log('Payload error', action.payload)\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            };\r\n        case SIGNIN_SUCCESS: \r\n            console.log('Payload', action.payload)\r\n            return {\r\n                ...state,\r\n                item: action.payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n\r\n        case SIGNOUT:\r\n            return{\r\n              ...state,\r\n              item: action.payload,\r\n              loading: false,\r\n              isAuthenticated: false\r\n            };\r\n\r\n        case CHECK_USER:\r\n            return{\r\n              ...state,\r\n              item: action.payload,\r\n              loading: false,\r\n              isAuthenticated: checkUser(action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import { NEW_RATING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isLoaded: false,\r\n    isLoading: false,\r\n    rating_item: {\r\n      data:{\r\n          getRating: {\r\n\r\n          }\r\n       }\r\n    },\r\n}\r\n\r\nexport default function( state = initialState, action ) {\r\n  switch(action.type) {\r\n    case NEW_RATING:\r\n      return{\r\n          ...state,\r\n          rating_item: action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport showReducer from './showReducer';\r\nimport authReducer from './authReducer';\r\nimport ratingReducer from './ratingReducer';\r\n\r\nexport default combineReducers({\r\n    shows: showReducer,\r\n    auth: authReducer,\r\n    ratings: ratingReducer,\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose ( \r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport Amplify, { Auth, Hub } from 'aws-amplify';\r\n\r\n// import PrivateRoute from './privateRoute';\r\n\r\nimport './App.css';\r\nimport './styles.scss';\r\n\r\n\r\nimport awsmobile from './aws-exports';\r\n\r\nAmplify.configure(awsmobile);\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n// Containers\r\n\r\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout/DefaultLayout'));\r\n\r\n// const BlankLayout = React.lazy(() => import('./containers/BlankLayout'));\r\n// Pages\r\nconst Home = React.lazy(() => import('./Pages/Home/Home'));\r\nconst Producers = React.lazy(() => import('./views/Producers/Producers'));\r\nconst Terms = React.lazy(() => import('./views/Terms/Terms'));\r\nconst Privacy = React.lazy(() => import('./views/Privacy/Privacy'));\r\nconst Test = React.lazy(() => import('./views/Test/Test'));\r\n\r\nconst ResetPassword = React.lazy(() => import('./ResetPassword'));\r\nconst Authenticator = React.lazy(() => import('./views/Auth/Authenticator'));\r\n\r\nconst Page404 = React.lazy(() => import('./views/Pages/Page404/Page404'));\r\n// const Page500 = React.lazy(() => import('./views/Pages/Page500/Page500'));\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    // this.checkUser();\r\n\r\n    // let the Hub module listen on Auth events\r\n    Hub.listen('auth', (data) => {\r\n      switch (data.payload.event) {\r\n          case 'signIn':\r\n              // console.log('now the user is signed in', data.payload.event);\r\n              // this.checkUser();\r\n\r\n              break;\r\n\r\n          case 'signIn_failure':\r\n              // console.log('user is not signed in', data.payload.event);\r\n              // this.setState({currentUser: {},  isLoaded: false});\r\n\r\n              break;\r\n\r\n          default:\r\n              break;\r\n      }\r\n  });\r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    // this.checkUser();\r\n    //Hub.listen('auth', this);\r\n  }\r\n  // onHubCapsule(capsule) {\r\n  //   const { channel, payload } = capsule;\r\n  //   if (channel === 'auth' && payload.event !== 'signIn') {\r\n  //     this.updateCurrentUser()\r\n  //   }\r\n  // }\r\n\r\n  checkUser = () => {\r\n    /* if (user) {\r\n\r\n      this.setState({ currentUser: user })\r\n      return\r\n    } */\r\n\r\n    Auth.currentAuthenticatedUser()\r\n      .then(\r\n        user => {\r\n          // this.setState({ currentUser: user, isLoaded: true })\r\n          // console.log('Check User Ok', user)\r\n\r\n          // this.props.history.push('/browse');\r\n        }\r\n      )\r\n      .catch(\r\n        err => {\r\n          // this.setState({ currentUser: null, isLoaded: true })\r\n          // console.log('Check User Fail', err)\r\n        }\r\n      );  \r\n  }\r\n\r\n    render() {\r\n         return (\r\n        <Provider store={store}>\r\n            <Router>\r\n            <div className=\"App\">\r\n                <React.Suspense fallback={loading()}>\r\n                    <Switch>\r\n                        {/* <Route path='/auth' component={Authenticator} /> */}\r\n                        <Route path='/signin' render={props => <Authenticator {...props} />} />\r\n                        <Route path='/forget-password' component={ResetPassword} />\r\n                        <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\r\n                        \r\n                        <Route path='/terms-of-service' component={Terms} />\r\n                        <Route path='/privacy' component={Privacy} />\r\n                        <Route path='/premium-content-producers-info' component={Producers} />\r\n                        <Route exact path='/' component={Home} />\r\n\r\n                        <Route path='/easter-egg' component={Test} />\r\n\r\n                        <Route path='/browse' name=\"Browse\" render={props => <DefaultLayout {...props} /> } />\r\n                    </Switch>\r\n                </React.Suspense>\r\n            </div>\r\n            </Router>\r\n        </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\r\n\r\nconst awsmobile = {\r\n    \"aws_project_region\": \"us-east-2\",\r\n    \"aws_dynamodb_all_tables_region\": \"us-east-2\",\r\n    \"aws_dynamodb_table_schemas\": [\r\n        {\r\n            \"tableName\": \"shows-dev\",\r\n            \"region\": \"us-east-2\"\r\n        }\r\n    ],\r\n    \"aws_user_files_s3_bucket\": \"modshow-dev\",\r\n    \"aws_user_files_s3_bucket_region\": \"us-east-2\",\r\n    \"aws_cognito_identity_pool_id\": \"us-east-2:c0c191ed-ce77-4522-8098-e669313a37fd\",\r\n    \"aws_cognito_region\": \"us-east-2\",\r\n    \"aws_user_pools_id\": \"us-east-2_7S59z3i6w\",\r\n    \"aws_user_pools_web_client_id\": \"7ll3posvasmiv3871vnbn5iq22\",\r\n    \"oauth\": {},\r\n    \"federationTarget\": \"COGNITO_USER_POOLS\",\r\n    \"aws_appsync_graphqlEndpoint\": \"https://epmq6dlasvdsfkcivunl6veqme.appsync-api.us-east-2.amazonaws.com/graphql\",\r\n    \"aws_appsync_region\": \"us-east-2\",\r\n    \"aws_appsync_authenticationType\": \"API_KEY\",\r\n    \"aws_appsync_apiKey\": \"da2-7uixjzhb6vhixfvlo52ymkqoya\",\r\n    \"aws_content_delivery_bucket\": \"dev.modshow-dev\",\r\n    \"aws_content_delivery_bucket_region\": \"us-east-2\",\r\n    \"aws_content_delivery_url\": \"http://dev.modshow-dev.s3-website.us-east-2.amazonaws.com\"\r\n};\r\n\r\n\r\nexport default awsmobile;\r\n"],"sourceRoot":""}